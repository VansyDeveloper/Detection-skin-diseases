import os
from datetime import datetime
from flask import Flask, render_template, request, send_from_directory, abort, redirect
from PIL import Image

import torch
import torchvision
import torchvision.transforms.functional

from src.model import Model

# Выбираем лучшее устройство для выполнения вычислений.
DEVICE = "cuda" if torch.cuda.is_available() else "cpu"

# Названия категории.
CLASSES = [
    "Угревая сыпь или розацея.",
    "Актинический кератоз, базалиома и другие злокачественные новообразования.",
    "Атопический дерматит.",
    "Диагноз не установлен.",
]

# Количество классов которые предсказывает модель.
NUM_CLASSES = 4

# Размер образца.
SAMPLE_SIZE = 128

# Функция активации.
ACTIVATION = "silu"

# Карта слоёв и блоков (Residual Blocks) модели.
# Первый уровень определяет количество ступеней свёртки,
# после каждой из которых за исключением последней разрешение
# карт признаков будет уменьшено в два раза (downsampling)
# Каждая ступень задаёт количество блоков с остаточной связью (ResidualBlock)
# где значение описывает количество карт признаков (out_channels) на выходе блока.
BLOCKS = [
    [64, 64, 64, 128], # 32 -> 16
    [128, 128, 128, 128, 256], # 16 -> 8
    [256, 256, 256, 256, 256, 256], # 8 -> 4 
]

# Вероятность dropout в блоках ResidualBlock.
DROPOUT = 0.2

# Тип нормализации "group" или "batch"
NORMALIZATION: str = "group"

# Количество групп.
NUM_GROUPS: int = 16

# Momentum.
MOMENTUM: float = 0.1

# Значение, добавляемое к знаменателю для численной устойчивости.
EPS: float = 1e-6

# Обучаемые параметры в нормализации.
AFFINE: bool = True

diagnose_descriptions = [
    [ # Метка 0
        "<b>Acne (акне)</b> — распространенное хроническое воспалительное заболевание кожи, которое возникает в результате закупорки пор и избыточной активности сальных желез. Основные проявления акне включают черные точки (комедоны), папулы, пустулы и кисты, которые чаще всего появляются на лице, спине и груди. Заболевание обычно связано с гормональными изменениями, особенно в подростковом возрасте, а также с бактериальной инфекцией <i>Propionibacterium acnes</i>. Лечение акне может включать местные средства (например, ретиноиды, антибиотики или пероксид бензоила), системные препараты (антибиотики, оральные контрацептивы или изотретиноин) и процедуры, такие как химические пилинги или лазерная терапия.",
        "<b>Rosacea (розацеа)</b> — хроническое воспалительное заболевание кожи, характеризующееся покраснением, видимыми кровеносными сосудами, угревыми высыпаниями и отеком, в основном на лице. В отличие от акне, розацеа не связана с комедонами и часто развивается у взрослых людей, преимущественно со светлой кожей. Точные причины заболевания до конца не изучены, но предполагается, что оно может быть вызвано генетической предрасположенностью, нарушениями иммунной системы, воздействием факторов окружающей среды (например, солнечного света или температурных изменений) и дисбалансом микрофлоры кожи. Лечение розацеа направлено на контроль симптомов и включает использование местных средств (метронидазол, азелаиновая кислота), пероральных препаратов (антибиотики из группы тетрациклинов) и рекомендации по уходу за кожей для минимизации триггеров.",
    ],
    [ # Метка 1
        "<b>Actinic Keratosis (актинический кератоз)</b> — предраковое состояние кожи, вызванное длительным воздействием ультрафиолетового излучения, чаще всего на открытых участках тела, таких как лицо, уши, руки и голени. Оно проявляется в виде шершавых, красноватых или коричневых пятен или бляшек, которые могут быть болезненными или зудящими. Актинический кератоз считается предвестником плоскоклеточного рака кожи, и если его не лечить, он может прогрессировать в злокачественную форму. Лечение включает удаление пораженных участков с помощью криотерапии (замораживание жидким азотом), лазерной терапии, химического пилинга или местных препаратов, таких как 5-фторурацил или имиквимод, которые способствуют разрушению аномальных клеток.",
        "<b>Basal Cell Carcinoma (базальноклеточный рак)</b> — наиболее распространенный тип рака кожи, который возникает из базальных клеток эпидермиса. Он характеризуется медленным ростом и редко метастазирует, но может вызывать серьезные повреждения окружающих тканей, если его не лечить. Типичные проявления включают блестящие, жемчужного цвета узелки, язвы, которые плохо заживают, или красные пятна на коже, чаще всего на лице, носу, ушах и других участках, подверженных солнечному воздействию. Основной причиной заболевания является хроническое воздействие УФ-излучения. Лечение включает хирургическое иссечение, кюретаж, криотерапию, лучевую терапию или использование местных препаратов, таких как имиквимод, в зависимости от размера, локализации и типа опухоли.",
    ],
    [ # Метка 2
        "<b>Atopic Dermatitis (атопический дерматит)</b> — хроническое воспалительное заболевание кожи, характеризующееся сильным зудом, сухостью и покраснением кожи. Оно часто связано с аллергическими состояниями, такими как бронхиальная астма и аллергический ринит, и является частью так называемой \"атопической триады\". Атопический дерматит обычно проявляется в раннем детском возрасте и может сохраняться на протяжении всей жизни. Заболевание вызвано комбинацией генетических факторов (например, мутации в гене филаггрина) и воздействия окружающей среды, таких как раздражители, аллергены и стресс. Лечение направлено на уменьшение симптомов и включает увлажнение кожи, использование местных кортикостероидов или ингибиторов кальциневрина, антигистаминные препараты для контроля зуда, а также избегание триггеров, таких как аллергены или экстремальные температуры. В тяжелых случаях могут применяться системные препараты, такие как иммунодепрессанты или биологические терапии.",
    ],
    [ # Метка 3
        "Диагноз может остаться неопределенным по нескольким причинам: во-первых, состояние кожи может быть здоровым, и отсутствие каких-либо явных признаков заболевания затрудняет его классификацию. Во-вторых, заболевание может быть редким или малоизученным, а значит, оно не входит в базу известных системе патологий. В-третьих, предоставленное изображение может не соответствовать фотографии кожи, например, если снимок сделан с неправильного ракурса, имеет плохое освещение или включает посторонние элементы, которые мешают анализу. Все эти факторы могут привести к невозможности точной диагностики, подчеркивая важность качественного визуального материала и дополнительных медицинских исследований для уточнения состояния пациента.",
    ],
]

# Модель.
model = Model(
    num_classes=NUM_CLASSES,
    map = BLOCKS,    
    activation=ACTIVATION,
    dropout=DROPOUT,
    normalization=NORMALIZATION,
    num_groups=NUM_GROUPS,
    momentum=MOMENTUM,
    eps=EPS,
    affine=AFFINE,
).to(DEVICE)

checkpoint = checkpoint = torch.load("./model.pt", map_location=torch.device('cpu'), weights_only=True)
model.load_state_dict(checkpoint['model.state_dict'])

model.eval()

# Папка для сохранения образцов.
UPLOAD_FOLDER = "static/uploads"

# Размер стороны образца (квадрат).
SAMPLE_SIZE = 128

app = Flask(
    __name__,
    static_folder="static",
)

@app.route("/")
def main():
    return render_template("index.html")

@app.post("/predict")
def predict():
    report = ""
    files = request.files.getlist("files")
    if len(files) == 1 and files[0].filename == "":
        return redirect("/")
    for index, f in enumerate(files):
        # Преобразуем загруженный файл в PILImage
        im = Image.open(f.stream)

        # Получаем образец изображения требуемого нам размера SAMPLE_SIZE x SAMPLE_SIZE.
        # Устанавливаем размер изображения равным SAMPLE_SIZE по меньшей стороне.
        # Вырезаем образец по центру.
        a = SAMPLE_SIZE / im.width if im.width < im.height else SAMPLE_SIZE / im.height
        w = int(im.width * a)
        h = int(im.height * a)
        im = im.resize((w, h), Image.Resampling.LANCZOS)
        x = (im.width - im.height) // 2 if im.width > im.height else 0
        y = (im.height - im.width) // 2 if im.height > im.width else 0
        im = im.crop((x, y, x + SAMPLE_SIZE, y + SAMPLE_SIZE))
        im = im.convert("RGB")

        # Сохраняем образцы на диск.
        sess_folder = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        folder = os.path.join(UPLOAD_FOLDER, sess_folder)
        os.makedirs(folder, exist_ok=True) 
        filename = os.path.join(folder, f"{index}.jpg")
        im.save(filename, format='JPEG', subsampling=0, quality=100)

        # Конвертируем картинку в тензор с значениями от 0 до 1.
        t = torchvision.transforms.functional.pil_to_tensor(im) / 255
        t = t.to(DEVICE)
        t = t.unsqueeze(dim=0)

        prediction = model(t)
        p_class = prediction.argmax(dim=1).item()
        predicted_value = torch.nn.functional.softmax(prediction)[0, p_class]

        # Определяем имя диагноза.
        diagnosis = CLASSES[p_class]

        # diagnosis = f"{diagnosis} - {p_index}"

        if predicted_value < 0.6:
            diagnosis = "Диагноз не установлен."

        # Формируем тело отчёта.
        report += "<div class=\"card\">"

        report += "<div class=\"image_area\">"
        report += f"<img src=\"{filename}\" />"
        report += "</div>"
        
        report += "<div class=\"content\">"
        report += f"<div class=\"prediction\"><span class=\"light-gray-text\">Диагноз:</span> {diagnosis}</div>"
        report += f"<div class=\"predicted_value\"><span class=\"light-gray-text\">Предсказанное значение:</span> {predicted_value:.4f}</div>"

        report += "<div>"
        for s in diagnose_descriptions[p_class]:
            report += f"<p>{s}</p>"
        report += "</div>"

        report += "</div>"

        report += "</div>"

    return render_template("predict.html", content=report)
